#!/bin/bash

# Create working directories if not exists
mkdir -p /rtorrent/{downloads,watch,.session,rutorrent/user-profiles,rutorrent/user-profiles/torrents}

# Change permission to ruTorrent's webserver user
chown -R www-data:www-data /rtorrent

# Override rTorrent settings
[ "${IP}" ] && {
    sed -i '/^ip =/d' /root/.rtorrent.rc
    echo "ip = ${IP}" >> /root/.rtorrent.rc
}
[ "${MAX_PEERS}" ] && {
    sed -i '/^max_peers =/d' /root/.rtorrent.rc
    echo "max_peers = ${MAX_PEERS}" >> /root/.rtorrent.rc
}
[ "${MAX_PEERS_SEED}" ] && {
    sed -i '/^max_peers_seed =/d' /root/.rtorrent.rc
    echo "max_peers_seed = ${MAX_PEERS_SEED}" >> /root/.rtorrent.rc
}
[ "${MAX_UPLOADS}" ] && {
    sed -i '/^max_uploads =/d' /root/.rtorrent.rc
    echo "max_uploads = ${MAX_UPLOADS}" >> /root/.rtorrent.rc
}
[ "${DOWNLOAD_RATE}" ] && {
    sed -i '/^download_rate =/d' /root/.rtorrent.rc
    echo "download_rate = ${DOWNLOAD_RATE}" >> /root/.rtorrent.rc
}
[ "${UPLOAD_RATE}" ] && {
    sed -i '/^upload_rate =/d' /root/.rtorrent.rc
    echo "upload_rate = ${UPLOAD_RATE}" >> /root/.rtorrent.rc
}

# Turn off all logs
[ "${LOGS_OFF}" == "yes" ] || [ "${LOGS_OFF}" == "y" ] && {
    sed -i '/^log./d' /root/.rtorrent.rc
    sed -i 's/\/var\/log\/nginx\/access.log;/\/dev\/null;/g' /etc/nginx/nginx.conf
    sed -i 's/\/var\/log\/nginx\/error.log;/\/dev\/null crit;/g' /etc/nginx/nginx.conf
    sed -i 's/^error_log = .*log/error_log = \/dev\/null/g' /etc/php5/fpm/php-fpm.conf
}

# Turn off authentication
[ "${AUTH_OFF}" ] && {
    sed -i '/allow 127.0.0.1/a allow '${AUTH_OFF}';' /etc/nginx/sites-enabled/default
}

# Symlink TV/Anime/Movies
grep "rtorrent-postprocess" /root/.rtorrent.rc \
    || echo 'system.method.set_key=event.download.finished,filebot_amc,"execute={/usr/local/bin/rtorrent-postprocess,$d.get_base_path=,$d.get_name=,$d.get_custom1=}"' >> /root/.rtorrent.rc

# Use s6 to supervise all services
exec /usr/bin/s6-svscan -t0 /service
